<?xml version="1.0" encoding="utf-8"?>
<svg version="1.1"
    baseProfile="full"
    xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    width="100%" height="100%">
    <title></title>
    <script type="text/javascript" xlink:href="http://code.jquery.com/jquery-2.1.1.min.js"></script>
    <script type="text/javascript" xlink:href="http://stats.270a.info/js/rdf_store_min.js"></script>
    <script type="text/javascript"><!--//--><![CDATA[//><!--
        var LSD = {
            C : {
                Lang: 'en',

                Input: {
                    "void:sparqlEndpoint": '',
                    "qb:DataSet": '',
                    "refArea": '',
                    "currencyN": '',
                    "currencyD": '',
                    "freq": ''
                },

                Sparkline: '',

                DotSize: '1'
            },

            U: {
                init: function () {
                    LSD.U.getData();
                },
                encodeString: function(string) {
	                return encodeURIComponent(string).replace(/'/g,"%27").replace(/"/g,"%22");
                },
                decodeString: function(string) {
	                return decodeURIComponent(string.replace(/\+/g,  " "));
                },
                urlParam: function(name) {
                    var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
                    if (results===null){
                       return null;
                    }
                    else{
                       return results[1] || 0;
                    }
                },

                getData: function() {
                    document.documentElement.setAttribute('class', 'processing');
                    //TODO: Use qb:Slice if no sparqlEndpoint
                    LSD.C.Input["void:sparqlEndpoint"] = LSD.U.decodeString(LSD.U.urlParam('void:sparqlEndpoint'));
                    LSD.C.Input["qb:DataSet"] = LSD.U.decodeString(LSD.U.urlParam('qb:DataSet'));

                    var pRefArea = LSD.U.urlParam('refArea');
                    var pCurrencyN = LSD.U.urlParam('currencyN');
                    var pCurrencyD = LSD.U.urlParam('currencyD');
                    var pFreq = LSD.U.urlParam('freq');

                    var paramNotation = '';

                    if (pRefArea != undefined) {
                        LSD.C.Input["refArea"] = LSD.U.decodeString(pRefArea);

                        paramDimension = "?propertyRefArea rdfs:subPropertyOf* sdmx-dimension:refArea .\n\
    ?observation ?propertyRefArea [ skos:notation '" + LSD.C.Input['refArea'] + "' ] .";

                    }
                    else {
                        LSD.C.Input["currencyN"] = LSD.U.decodeString(pCurrencyN);
                        LSD.C.Input["currencyD"] = LSD.U.decodeString(pCurrencyD);
                        LSD.C.Input["freq"] = LSD.U.decodeString(pFreq);
//    ?propertyFreq rdfs:subPropertyOf* sdmx-dimension:freq .\n\
//    ?propertyCurrencyN rdfs:subPropertyOf* sdmx-dimension:currency .\n\
//    ?propertyCurrencyD rdfs:subPropertyOf* sdmx-dimension:currency .\n\

                        paramDimension = "?observation <http://ecb.270a.info/dimension/1.0/EXR_SUFFIX> <http://ecb.270a.info/code/1.0/CL_EXR_SUFFIX/A> .\n\
    ?observation <http://ecb.270a.info/dimension/1.0/FREQ> [ skos:notation '" + LSD.C.Input['freq'] + "' ] .\n\
    ?observation <http://ecb.270a.info/dimension/1.0/CURRENCY> [ skos:notation '" + LSD.C.Input['currencyN'] + "' ] .\n\
    ?observation <http://ecb.270a.info/dimension/1.0/CURRENCY_DENOM> [ skos:notation '" + LSD.C.Input['currencyD'] + "' ] .";
                    }

                    var query = "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\
PREFIX dcterms: <http://purl.org/dc/terms/>\n\
PREFIX qb: <http://purl.org/linked-data/cube#>\n\
PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#>\n\
PREFIX sdmx-measure: <http://purl.org/linked-data/sdmx/2009/measure#>\n\
CONSTRUCT {\n\
    ?observation qb:dataSet <" + LSD.C.Input['qb:DataSet'] + "> .\n\
    ?observation sdmx-dimension:refPeriod ?refPeriod .\n\
    ?observation sdmx-measure:obsValue ?obsValue .\n\
    <" + LSD.C.Input['qb:DataSet'] + "> dcterms:title ?title .\n\
}\n\
WHERE {\n\
    ?observation qb:dataSet <" + LSD.C.Input['qb:DataSet'] + "> .\n\
    " + paramDimension + "\n\
    ?propertyRefPeriod rdfs:subPropertyOf* sdmx-dimension:refPeriod .\n\
    ?observation ?propertyRefPeriod ?refPeriod .\n\
    ?propertyMeasure rdfs:subPropertyOf* sdmx-measure:obsValue .\n\
    ?observation ?propertyMeasure ?obsValue .\n\
    <" + LSD.C.Input['qb:DataSet'] + "> dcterms:title ?title .\n\
}";
                    var queryURL = LSD.U.decodeString(LSD.C.Input['void:sparqlEndpoint']) + "?query=" + LSD.U.encodeString(query);

                    var queryA = "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\
PREFIX dcterms: <http://purl.org/dc/terms/>\n\
PREFIX qb: <http://purl.org/linked-data/cube#>\n\
PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#>\n\
PREFIX sdmx-measure: <http://purl.org/linked-data/sdmx/2009/measure#>\n\
SELECT ?obsValue\n\
WHERE {\n\
    ?observation sdmx-measure:obsValue ?obsValue .\n\
    ?observation sdmx-dimension:refPeriod ?refPeriod .\n\
}\n\
ORDER BY ?refPeriod";

                    var store = rdfstore.create();
                    store.load('remote', queryURL, function(success, results){
                        if (success) {
                            store.execute(LSD.U.decodeString(queryA), function(success, results) {
                                if (results.length > 0) {
                                    LSD.U.drawSparkline(results);
                                }
                                else {
                                    console.log('TODO');
                                }
                            });
                        }
                        else {
                            console.log('TODO');
                        }
                    });
                },

                drawSparkline: function(results) {
                    var data = $.map(results, function(n) { return n.obsValue.value; }),
                        max = Math.max.apply(null, data),
                        min = Math.min.apply(null, data);

                    var new_max = 98;
                    var new_min = 0;
                    var range = new_max - new_min;

                    var parts = $.map(data, function (v) {
                        return (new_max - new_min) / (max - min) * (v - min) + new_min || 0;
                    });

                    var x1 = 0, y1 = 0, x2 = div / 2, y2 = range - parts[0];
                    var div = 100 / parts.length;

                    var lines = '';
                    for (var i=0; i < parts.length; i++) {
                        x1 = x2; y1 = y2;
                        x2 = range * (i / parts.length) + (div / 2);
                        y2 = range - parts[i];

                        lines += '<line' +
                            ' x1="' + x1 + '%"' +
                            ' x2="' + x2 + '%"' +
                            ' y1="' + y1 + '%"' +
                            ' y2="' + y2 + '%"' +
                            '/>';

                        //Last data item
                        if(i+1 === parts.length) {
                            lines += '<circle class="point"' +
                                ' cx="' + (x2 - LSD.C.DotSize) + '%"' +
                                ' cy="' + (y2 + 2 * LSD.C.DotSize) + '%"' +
                                ' r="' + LSD.C.DotSize + '"' +
                                '/>';
                        }
                    }

                    document.documentElement.setAttribute('class', '');
                    $('svg').append('<g width="" height="" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><a target="_blank" xlink:href="' + LSD.C.Input['qb:DataSet'] + '">' + lines + '</a></g>');
                }
            }
        };

        $(document).ready(function(){
            LSD.U.init();
        });

  //--><!]]></script>

    <style type="text/css"><!--/*--><![CDATA[/*><!--*/
        .processing {
            background:url("http://270a.info/theme/default/images/icons/icon_processing.gif") no-repeat 45% 0;
        }
        line {
            stroke: #333333;
            stroke-width: 1px;
        }
        circle.point {
            stroke: #ff0000;
            fill: #ff0000;
        }
    /*]]>*/--></style>
</svg>
