<?xml version="1.0" encoding="utf-8"?>
<svg height="100%" prefix="rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs: http://www.w3.org/2000/01/rdf-schema# xsd: http://www.w3.org/2001/XMLSchema# qb: http://purl.org/linked-data/cube# prov: http://www.w3.org/ns/prov# schema: https://schema.org/" version="1.1" width="100%" xmlns="http://www.w3.org/2000/svg" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xlink="http://www.w3.org/1999/xlink">
    <style type="text/css">/*<![CDATA[*/line { stroke:#000; stroke-width:1px; } circle { stroke:#f00; fill:#f00; }/*]]>*/</style>
    <script type="text/javascript" xlink:href="https://localhost:8443/dokieli/scripts/simplerdf.js"></script>
    <script type="text/javascript" xlink:href="https://localhost:8443/dokieli/scripts/do.js"></script>
    <script type="text/javascript"><!--//--><![CDATA[//><!--
        var S = {
            U: {
                init: function () {
                    S.U.getData();
                },

                getData: function() {
                    document.documentElement.setAttribute('class', '.fa.fa-spinner.fa-pulse');
                    //TODO: Use qb:Slice if no sparqlEndpoint
                    var sparqlEndpoint = DO.U.decodeString(DO.U.urlParam('void:sparqlEndpoint'));
                    var dataset = DO.U.decodeString(DO.U.urlParam('qb:DataSet'));

                    var pRefArea = DO.U.urlParam('refArea');
                    var pCurrencyN = DO.U.urlParam('currencyN');
                    var pCurrencyD = DO.U.urlParam('currencyD');
                    var pFreq = DO.U.urlParam('freq');

                    //TODO
//                    var cssStroke = DO.U.urlParam('cssStroke');

                    var paramNotation = '';

                    if (pRefArea != undefined) {
                        refArea = DO.U.decodeString(pRefArea).toUpperCase();

                        paramDimension = "\n\
    ?propertyRefArea rdfs:subPropertyOf* sdmx-dimension:refArea .\n\
    ?observation ?propertyRefArea [ skos:notation '" + refArea + "' ] .";
                    }
                    else {
                        var currencyN = DO.U.decodeString(pCurrencyN).toUpperCase();
                        var currencyD = DO.U.decodeString(pCurrencyD).toUpperCase();
                        var freq = DO.U.decodeString(pFreq).toUpperCase();
//    ?propertyFreq rdfs:subPropertyOf* sdmx-dimension:freq .\n\
//    ?propertyCurrencyN rdfs:subPropertyOf* sdmx-dimension:currency .\n\
//    ?propertyCurrencyD rdfs:subPropertyOf* sdmx-dimension:currency .\n\

                        paramDimension = "\n\
    ?observation <http://ecb.270a.info/dimension/1.0/EXR_SUFFIX> <http://ecb.270a.info/code/1.0/CL_EXR_SUFFIX/A> .\n\
    ?observation <http://ecb.270a.info/dimension/1.0/FREQ> [ skos:notation '" + freq + "' ] .\n\
    ?observation <http://ecb.270a.info/dimension/1.0/CURRENCY> [ skos:notation '" + currencyN + "' ] .\n\
    ?observation <http://ecb.270a.info/dimension/1.0/CURRENCY_DENOM> [ skos:notation '" + currencyD + "' ] .";
                    }

//console.log(sparqlEndpoint);
//console.log(dataset);
//console.log(refArea);
                    var queryURL = DO.U.createSPARQLQueryURLGetObservationsWithDimension(sparqlEndpoint, dataset, paramDimension);
//console.log(queryURL);
                    var pIRI = queryURL;
                    if (document.location.protocol == 'https:' && pIRI.slice(0, 5).toLowerCase() == 'http:') {
                        pIRI = DO.C.ProxyURL + DO.U.encodeString(pIRI);
                    }
                    queryURL = pIRI;

                    DO.U.getTriplesFromGraph(queryURL)
                        .then(function(triples){
// console.log(triples);
                            if(triples.length > 0) {
                                var observations = {};
                                triples.forEach(function(t){
                                    var s = t.subject.nominalValue;
                                    var p = t.predicate.nominalValue;
                                    var o = t.object.nominalValue;
                                    observations[s] = observations[s] || {};
                                    observations[s][p] = o;
                                });
// console.log(observations);
                                var list = [], item;
                                Object.keys(observations).forEach(function(key) {
                                    item = {};
                                    observations[key]['http://purl.org/linked-data/cube#Observation'] = key;
                                    item[key] = observations[key];
                                    list.push(item[key]);
                                });
                                var sortByKey = 'http://purl.org/linked-data/sdmx/2009/dimension#refPeriod';
                                list.sort(function (a, b) {
                                    return a[sortByKey].toLowerCase().localeCompare(b[sortByKey].toLowerCase());
                                });
//console.log(list);
                                return list;
                            }
                            else {
                                //This shouldn't happen.
                                document.insertAdjacentHTML('beforeend', '<span class="sparkline-info">0 observations. Select another.</span>');
                            }
                        })
                        .then(function(list){
                            var options = {
                                url: dataset,
                                title: dataset, //change to dataset's title dcterms:title
                                cssStroke: '#000'
                            };

                            var sparkline = DO.U.drawSparklineGraph(list, options);
                            document.documentElement.setAttribute('class', '');
                            document.querySelector('svg').insertAdjacentHTML('beforeend', sparkline);
                       });
                }
            }
        };

        document.addEventListener('DOMContentLoaded', function(){ S.U.init(); });
//--><!]]></script>
</svg>
